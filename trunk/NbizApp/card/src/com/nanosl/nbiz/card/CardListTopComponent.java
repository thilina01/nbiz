/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.nanosl.nbiz.card;

import com.nanosl.nbiz.util.NTopComponent;
import entity.Customer;
import entity.SaleInvoice;
import java.util.Collection;
import javax.swing.table.DefaultTableModel;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.windows.TopComponent;
import org.openide.util.NbBundle.Messages;
import query.Find;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(
        dtd = "-//com.nanosl.nbiz.gui//CardList//EN",
        autostore = false
)
@TopComponent.Description(
        preferredID = "CardListTopComponent",
        //iconBase="SET/PATH/TO/ICON/HERE", 
        persistenceType = TopComponent.PERSISTENCE_ALWAYS
)
@TopComponent.Registration(mode = "editor", openAtStartup = false)
@ActionID(category = "Window", id = "com.nanosl.nbiz.gui.CardListTopComponent")
@ActionReference(path = "Menu/Window" /*, position = 333 */)
@TopComponent.OpenActionRegistration(
        displayName = "#CTL_CardListAction",
        preferredID = "CardListTopComponent"
)
@Messages({
    "CTL_CardListAction=CardList",
    "CTL_CardListTopComponent=CardList Window",
    "HINT_CardListTopComponent=This is a CardList window"
})
public final class CardListTopComponent extends NTopComponent {

    public CardListTopComponent() {
        initComponents();
        tableModel = (DefaultTableModel) cardTable.getModel();
        setName(Bundle.CTL_CardListTopComponent());
        setToolTipText(Bundle.HINT_CardListTopComponent());

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        cardTable = new javax.swing.JTable();
        loadButton = new javax.swing.JButton();

        cardTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Card", "NIC", "Name", "Amount", "Remaining"
            }
        ));
        jScrollPane1.setViewportView(cardTable);
        if (cardTable.getColumnModel().getColumnCount() > 0) {
            cardTable.getColumnModel().getColumn(0).setHeaderValue(org.openide.util.NbBundle.getMessage(CardListTopComponent.class, "CardListTopComponent.cardTable.columnModel.title0")); // NOI18N
            cardTable.getColumnModel().getColumn(1).setHeaderValue(org.openide.util.NbBundle.getMessage(CardListTopComponent.class, "CardListTopComponent.cardTable.columnModel.title1")); // NOI18N
            cardTable.getColumnModel().getColumn(2).setHeaderValue(org.openide.util.NbBundle.getMessage(CardListTopComponent.class, "CardListTopComponent.cardTable.columnModel.title2")); // NOI18N
            cardTable.getColumnModel().getColumn(3).setHeaderValue(org.openide.util.NbBundle.getMessage(CardListTopComponent.class, "CardListTopComponent.cardTable.columnModel.title3")); // NOI18N
            cardTable.getColumnModel().getColumn(4).setHeaderValue(org.openide.util.NbBundle.getMessage(CardListTopComponent.class, "CardListTopComponent.cardTable.columnModel.title4")); // NOI18N
        }

        org.openide.awt.Mnemonics.setLocalizedText(loadButton, org.openide.util.NbBundle.getMessage(CardListTopComponent.class, "CardListTopComponent.loadButton.text")); // NOI18N
        loadButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 787, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(loadButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(loadButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void loadButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadButtonActionPerformed
        Collection<SaleInvoice> saleInvoices = Find.saleInvoicesAsCard();
        tableModel.setRowCount(0);
        if (saleInvoices == null) {
            return;
        }
        for (SaleInvoice saleInvoice : saleInvoices) {
            Customer customer = saleInvoice.getCustomer();
            Object[] row = {
                saleInvoice.getCardNumber(), customer.getNic(), customer.getName(), saleInvoice.getAmount(), saleInvoice.getCredit()
            };
            tableModel.addRow(row);
        }
    }//GEN-LAST:event_loadButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable cardTable;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton loadButton;
    // End of variables declaration//GEN-END:variables
    DefaultTableModel tableModel;

    @Override
    public void componentOpened() {
        // TODO add custom code on component opening
    }

    @Override
    public void componentClosed() {
        // TODO add custom code on component closing
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }
}
