/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.nanosl.nbiz.card;

import com.nanosl.nbiz.gui.SaleInvoicePaymentTopComponent;
import com.nanosl.nbiz.util.NTopComponent;
import entity.CollectionReceipt;
import entity.Customer;
import entity.SaleInvoice;
import entity.SaleInvoiceHasItem;
import java.awt.Window;
import java.util.Collection;
import java.util.Date;
import javax.persistence.Query;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import org.jdesktop.swingx.JXDatePicker;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.windows.TopComponent;
import org.openide.util.NbBundle.Messages;
import org.openide.windows.WindowManager;
import query.Find;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(
        dtd = "-//com.nanosl.nbiz.card//Card//EN",
        autostore = false
)
@TopComponent.Description(
        preferredID = "CardTopComponent",
        //iconBase="SET/PATH/TO/ICON/HERE", 
        persistenceType = TopComponent.PERSISTENCE_ALWAYS
)
@TopComponent.Registration(mode = "editor", openAtStartup = false)
@ActionID(category = "Window", id = "com.nanosl.nbiz.card.CardTopComponent")
@ActionReference(path = "Menu/Window" /*, position = 333 */)
@TopComponent.OpenActionRegistration(
        displayName = "#CTL_CardAction",
        preferredID = "CardTopComponent"
)
@Messages({
    "CTL_CardAction=Card",
    "CTL_CardTopComponent=Card Window",
    "HINT_CardTopComponent=This is a Card window"
})
public final class CardTopComponent extends NTopComponent {

    public CardTopComponent() {
        initComponents();
        invoiceTableModel = (DefaultTableModel) invoiceTable.getModel();
        paymentsTableModel = (DefaultTableModel) paymentsTable.getModel();

        setName(Bundle.CTL_CardTopComponent());
        setToolTipText(Bundle.HINT_CardTopComponent());

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        cardOrNicNumberTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        cardTypeComboBox = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        purchaseDatePicker = new JXDatePicker();
        jPanel2 = new javax.swing.JPanel();
        fixedPhoneTextField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        nameTextField = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        cityTextField = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        nicTextField = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        mobileTextField = new javax.swing.JTextField();
        addressTextField = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        totalAmountTextField = new javax.swing.JTextField();
        invoiceNumberTextField = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        initialPaymentTextField = new javax.swing.JTextField();
        termAmountTextField = new javax.swing.JTextField();
        alreadyPaidTextField = new javax.swing.JTextField();
        remainingAmountTextField = new javax.swing.JTextField();
        numberOfTermsTextField = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        invoiceTable = new javax.swing.JTable();
        installmentDatePicker = new JXDatePicker();
        jPanel4 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        paymentsTable = new javax.swing.JTable();
        payButton = new javax.swing.JButton();
        jLabel19 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        clearButton = new javax.swing.JButton();

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        cardOrNicNumberTextField.setText(org.openide.util.NbBundle.getMessage(CardTopComponent.class, "CardTopComponent.cardOrNicNumberTextField.text")); // NOI18N
        cardOrNicNumberTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cardOrNicNumberTextFieldActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(CardTopComponent.class, "CardTopComponent.jLabel2.text")); // NOI18N

        cardTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel<String>(new String[] { "S", "T" }));
        cardTypeComboBox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cardTypeComboBoxKeyPressed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jLabel3, org.openide.util.NbBundle.getMessage(CardTopComponent.class, "CardTopComponent.jLabel3.text")); // NOI18N

        purchaseDatePicker.setName("purchaseDatePicker"); // NOI18N
        purchaseDatePicker.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                purchaseDatePickerKeyPressed(evt);
            }
        });

        jPanel2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        fixedPhoneTextField.setText(org.openide.util.NbBundle.getMessage(CardTopComponent.class, "CardTopComponent.fixedPhoneTextField.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel6, org.openide.util.NbBundle.getMessage(CardTopComponent.class, "CardTopComponent.jLabel6.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel4, org.openide.util.NbBundle.getMessage(CardTopComponent.class, "CardTopComponent.jLabel4.text")); // NOI18N

        nameTextField.setText(org.openide.util.NbBundle.getMessage(CardTopComponent.class, "CardTopComponent.nameTextField.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel8, org.openide.util.NbBundle.getMessage(CardTopComponent.class, "CardTopComponent.jLabel8.text")); // NOI18N

        cityTextField.setText(org.openide.util.NbBundle.getMessage(CardTopComponent.class, "CardTopComponent.cityTextField.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel9, org.openide.util.NbBundle.getMessage(CardTopComponent.class, "CardTopComponent.jLabel9.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel5, org.openide.util.NbBundle.getMessage(CardTopComponent.class, "CardTopComponent.jLabel5.text")); // NOI18N

        nicTextField.setText(org.openide.util.NbBundle.getMessage(CardTopComponent.class, "CardTopComponent.nicTextField.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel10, org.openide.util.NbBundle.getMessage(CardTopComponent.class, "CardTopComponent.jLabel10.text")); // NOI18N

        mobileTextField.setText(org.openide.util.NbBundle.getMessage(CardTopComponent.class, "CardTopComponent.mobileTextField.text")); // NOI18N

        addressTextField.setText(org.openide.util.NbBundle.getMessage(CardTopComponent.class, "CardTopComponent.addressTextField.text")); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(nicTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 185, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(fixedPhoneTextField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(mobileTextField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cityTextField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addressTextField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nameTextField))
                        .addContainerGap())))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nicTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addressTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mobileTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(fixedPhoneTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(40, Short.MAX_VALUE))
        );

        jPanel3.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        totalAmountTextField.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        totalAmountTextField.setText(org.openide.util.NbBundle.getMessage(CardTopComponent.class, "CardTopComponent.totalAmountTextField.text")); // NOI18N

        invoiceNumberTextField.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        invoiceNumberTextField.setText(org.openide.util.NbBundle.getMessage(CardTopComponent.class, "CardTopComponent.invoiceNumberTextField.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel14, org.openide.util.NbBundle.getMessage(CardTopComponent.class, "CardTopComponent.jLabel14.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel15, org.openide.util.NbBundle.getMessage(CardTopComponent.class, "CardTopComponent.jLabel15.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel12, org.openide.util.NbBundle.getMessage(CardTopComponent.class, "CardTopComponent.jLabel12.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel11, org.openide.util.NbBundle.getMessage(CardTopComponent.class, "CardTopComponent.jLabel11.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel13, org.openide.util.NbBundle.getMessage(CardTopComponent.class, "CardTopComponent.jLabel13.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel16, org.openide.util.NbBundle.getMessage(CardTopComponent.class, "CardTopComponent.jLabel16.text")); // NOI18N

        initialPaymentTextField.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        initialPaymentTextField.setText(org.openide.util.NbBundle.getMessage(CardTopComponent.class, "CardTopComponent.initialPaymentTextField.text")); // NOI18N

        termAmountTextField.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        termAmountTextField.setText(org.openide.util.NbBundle.getMessage(CardTopComponent.class, "CardTopComponent.termAmountTextField.text")); // NOI18N

        alreadyPaidTextField.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        alreadyPaidTextField.setText(org.openide.util.NbBundle.getMessage(CardTopComponent.class, "CardTopComponent.alreadyPaidTextField.text")); // NOI18N

        remainingAmountTextField.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        remainingAmountTextField.setText(org.openide.util.NbBundle.getMessage(CardTopComponent.class, "CardTopComponent.remainingAmountTextField.text")); // NOI18N

        numberOfTermsTextField.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        numberOfTermsTextField.setText(org.openide.util.NbBundle.getMessage(CardTopComponent.class, "CardTopComponent.numberOfTermsTextField.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel17, org.openide.util.NbBundle.getMessage(CardTopComponent.class, "CardTopComponent.jLabel17.text")); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12)
                    .addComponent(jLabel16)
                    .addComponent(jLabel15)
                    .addComponent(jLabel14)
                    .addComponent(jLabel13)
                    .addComponent(jLabel17)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(alreadyPaidTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 84, Short.MAX_VALUE)
                    .addComponent(termAmountTextField, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(numberOfTermsTextField, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(initialPaymentTextField, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(totalAmountTextField, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(remainingAmountTextField)
                    .addComponent(invoiceNumberTextField))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(invoiceNumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(totalAmountTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(initialPaymentTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(numberOfTermsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addGap(7, 7, 7)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(termAmountTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(alreadyPaidTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(remainingAmountTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        invoiceTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item", "Quantity", "Amount"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(invoiceTable);
        if (invoiceTable.getColumnModel().getColumnCount() > 0) {
            invoiceTable.getColumnModel().getColumn(0).setPreferredWidth(200);
            invoiceTable.getColumnModel().getColumn(0).setHeaderValue(org.openide.util.NbBundle.getMessage(CardTopComponent.class, "CardTopComponent.invoiceTable.columnModel.title0")); // NOI18N
            invoiceTable.getColumnModel().getColumn(1).setPreferredWidth(50);
            invoiceTable.getColumnModel().getColumn(1).setHeaderValue(org.openide.util.NbBundle.getMessage(CardTopComponent.class, "CardTopComponent.invoiceTable.columnModel.title1")); // NOI18N
            invoiceTable.getColumnModel().getColumn(1).setCellRenderer(null);
            invoiceTable.getColumnModel().getColumn(2).setPreferredWidth(50);
            invoiceTable.getColumnModel().getColumn(2).setHeaderValue(org.openide.util.NbBundle.getMessage(CardTopComponent.class, "CardTopComponent.invoiceTable.columnModel.title2")); // NOI18N
            invoiceTable.getColumnModel().getColumn(2).setCellRenderer(null);
        }

        installmentDatePicker.setName("datePicker"); // NOI18N
        installmentDatePicker.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                installmentDatePickerKeyPressed(evt);
            }
        });

        jPanel4.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        org.openide.awt.Mnemonics.setLocalizedText(jLabel18, org.openide.util.NbBundle.getMessage(CardTopComponent.class, "CardTopComponent.jLabel18.text")); // NOI18N

        paymentsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Receipt", "Date", "Amount"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(paymentsTable);
        if (paymentsTable.getColumnModel().getColumnCount() > 0) {
            paymentsTable.getColumnModel().getColumn(0).setHeaderValue(org.openide.util.NbBundle.getMessage(CardTopComponent.class, "CardTopComponent.paymentsTable.columnModel.title2")); // NOI18N
            paymentsTable.getColumnModel().getColumn(1).setHeaderValue(org.openide.util.NbBundle.getMessage(CardTopComponent.class, "CardTopComponent.paymentsTable.columnModel.title0")); // NOI18N
            paymentsTable.getColumnModel().getColumn(2).setHeaderValue(org.openide.util.NbBundle.getMessage(CardTopComponent.class, "CardTopComponent.paymentsTable.columnModel.title1")); // NOI18N
            paymentsTable.getColumnModel().getColumn(2).setCellRenderer(rightAlignCell);
        }

        org.openide.awt.Mnemonics.setLocalizedText(payButton, org.openide.util.NbBundle.getMessage(CardTopComponent.class, "CardTopComponent.payButton.text")); // NOI18N
        payButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                payButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel18)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 89, Short.MAX_VALUE)
                        .addComponent(payButton)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(payButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        org.openide.awt.Mnemonics.setLocalizedText(jLabel19, org.openide.util.NbBundle.getMessage(CardTopComponent.class, "CardTopComponent.jLabel19.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel7, org.openide.util.NbBundle.getMessage(CardTopComponent.class, "CardTopComponent.jLabel7.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(clearButton, org.openide.util.NbBundle.getMessage(CardTopComponent.class, "CardTopComponent.clearButton.text")); // NOI18N
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(clearButton))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(cardTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel7)
                                .addGap(25, 25, 25)
                                .addComponent(cardOrNicNumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(purchaseDatePicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel19)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(installmentDatePicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(clearButton)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cardOrNicNumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(cardTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(purchaseDatePicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(installmentDatePicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel19)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void purchaseDatePickerKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_purchaseDatePickerKeyPressed
        if (evt.getKeyCode() == 10) {
//            customerComboBox.requestFocus();
        }
    }//GEN-LAST:event_purchaseDatePickerKeyPressed

    private void cardOrNicNumberTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cardOrNicNumberTextFieldActionPerformed
        clear();
        String cardOrNicNumberText = cardOrNicNumberTextField.getText().trim();
        SaleInvoice saleInvoice;
        if (cardOrNicNumberText.length() == 10) {
            Collection<SaleInvoice> saleInvoices = Find.saleInvoicesAsActiveCardsByNic(cardOrNicNumberText);
            if (saleInvoices == null) {
                return;
            }            
            if (saleInvoices.size() == 1) {
                saleInvoice = saleInvoices.iterator().next();
                cardOrNicNumberTextField.setText(saleInvoice.getCardNumber());
            } else {
                final JComboBox<SaleInvoice> jcb = new JComboBox<>(saleInvoices.toArray(new SaleInvoice[0]));
                jcb.requestFocus();

                jcb.addKeyListener(new java.awt.event.KeyAdapter() {
                    @Override
                    public void keyPressed(java.awt.event.KeyEvent evt) {
                        if (evt.getKeyCode() == 10) {
                            Window w = SwingUtilities.getWindowAncestor(jcb);
                            if (w != null) {
                                w.setVisible(false);
                            }
                        }
                    }
                });
                JOptionPane.showOptionDialog(null, jcb, "select card", JOptionPane.DEFAULT_OPTION, JOptionPane.INFORMATION_MESSAGE, null, new Object[]{}, null);
                saleInvoice = (SaleInvoice) jcb.getSelectedItem();
                cardOrNicNumberTextField.setText(saleInvoice.getCardNumber());
            }
        } else {
            cardOrNicNumberText = cardTypeComboBox.getSelectedItem().toString() + cardOrNicNumberText;
            Query qry = manager.getEm().createNamedQuery("SaleInvoice.findByCardNumber");
            qry.setParameter("cardNumber", cardOrNicNumberText);
            saleInvoice = manager.exNamedQueryParamResult(qry, SaleInvoice.class);

            if (saleInvoice == null) {
                String invoiceNumber = JOptionPane.showInputDialog(this, "Create New Card : " + cardOrNicNumberText + " ? \n Enter Invoice Number:", "Card not found", JOptionPane.OK_CANCEL_OPTION);
                if (invoiceNumber != null) {
                    saleInvoice = manager.find(SaleInvoice.class, invoiceNumber);
                    if (saleInvoice != null) {
                        saleInvoice.setCardNumber(cardOrNicNumberText);
                        manager.update(saleInvoice);
                    } else {
                        showError("Invoice Not Found, \n Card creation failed.");
                        return;
                    }
                } else {
                    return;
                }
            }
        }
        purchaseDatePicker.setDate(saleInvoice.getInvTime());
        Customer customer = saleInvoice.getCustomer();
        nicTextField.setText(customer.getNic());
        nameTextField.setText(customer.getName());
        addressTextField.setText(customer.getAddressNumber() + ", " + customer.getAddressStreet());
        cityTextField.setText(customer.getCity());
        mobileTextField.setText(customer.getMobile());
        fixedPhoneTextField.setText(customer.getFixedLine());

        invoiceNumberTextField.setText(saleInvoice.getInvNo());
        totalAmountTextField.setText(nf2d.format(saleInvoice.getAmount()));
        initialPaymentTextField.setText(nf2d.format(saleInvoice.getInitialPayment() != null ? saleInvoice.getInitialPayment() : 0));
        int numberOfTerms = saleInvoice.getNumberOfTerms();
        if (numberOfTerms == 0) {
            String text = JOptionPane.showInputDialog(this, "Enter number of terms:", "Terms", JOptionPane.OK_CANCEL_OPTION);
            numberOfTerms = Integer.parseInt(text);
            saleInvoice.setNumberOfTerms(numberOfTerms);
            double termAmount = saleInvoice.getCredit() / numberOfTerms;
            String text2 = JOptionPane.showInputDialog(this, "Enter Term Amount : (" + nf2d.format(termAmount) + ")", "Term Aount", JOptionPane.OK_CANCEL_OPTION);
            termAmount = Double.parseDouble(text2);
            saleInvoice.setTermAmount(termAmount);
            manager.update(saleInvoice);
        }

        numberOfTermsTextField.setText(numberOfTerms + "");
        termAmountTextField.setText(nf2d.format(saleInvoice.getTermAmount() != null ? saleInvoice.getTermAmount() : 0));
        alreadyPaidTextField.setText(nf2d.format(saleInvoice.getReceivedAmount() != null ? saleInvoice.getReceivedAmount() : 0));
        remainingAmountTextField.setText(nf2d.format(saleInvoice.getCredit()));

        invoiceTableModel.setRowCount(0);
        Collection<SaleInvoiceHasItem> saleInvoiceHasItems = saleInvoice.getSaleInvoiceHasItemCollection();
        for (SaleInvoiceHasItem saleInvoiceHasItem : saleInvoiceHasItems) {
            Object[] row = {saleInvoiceHasItem.getItem().getDescription(), nf2d.format(saleInvoiceHasItem.getQuantity()), nf2d.format(saleInvoiceHasItem.getRate() * saleInvoiceHasItem.getQuantity())};
            invoiceTableModel.addRow(row);
        }
        paymentsTableModel.setRowCount(0);
        Collection<CollectionReceipt> collectionReceipts = saleInvoice.getCollectionReceiptCollection();
        for (CollectionReceipt collectionReceipt : collectionReceipts) {
            Object[] row = {collectionReceipt.getReceiptNumber(), yyyy_MM_dd.format(collectionReceipt.getCollectedTime()), nf2d.format(collectionReceipt.getAmount() != null ? collectionReceipt.getAmount() : 0)};
            paymentsTableModel.addRow(row);
        }

    }//GEN-LAST:event_cardOrNicNumberTextFieldActionPerformed

    private void installmentDatePickerKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_installmentDatePickerKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_installmentDatePickerKeyPressed

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        clear();
    }//GEN-LAST:event_clearButtonActionPerformed

    private void payButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_payButtonActionPerformed
        TopComponent tc = WindowManager.getDefault().findTopComponent("SaleInvoicePaymentTopComponent");
        SaleInvoicePaymentTopComponent saleInvoicePaymentTopComponent;
        if (tc != null) {
            saleInvoicePaymentTopComponent = (SaleInvoicePaymentTopComponent) tc;
            saleInvoicePaymentTopComponent.fill(manager.find(SaleInvoice.class, invoiceNumberTextField.getText().trim()));
            saleInvoicePaymentTopComponent.open();
            saleInvoicePaymentTopComponent.requestActive();
        }
    }//GEN-LAST:event_payButtonActionPerformed

    private void cardTypeComboBoxKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cardTypeComboBoxKeyPressed
        if (evt.getKeyCode() == 10) {
            cardOrNicNumberTextField.requestFocus();
        }
    }//GEN-LAST:event_cardTypeComboBoxKeyPressed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField addressTextField;
    private javax.swing.JTextField alreadyPaidTextField;
    private javax.swing.JTextField cardOrNicNumberTextField;
    private javax.swing.JComboBox<String> cardTypeComboBox;
    private javax.swing.JTextField cityTextField;
    private javax.swing.JButton clearButton;
    private javax.swing.JTextField fixedPhoneTextField;
    private javax.swing.JTextField initialPaymentTextField;
    private org.jdesktop.swingx.JXDatePicker installmentDatePicker;
    private javax.swing.JTextField invoiceNumberTextField;
    private javax.swing.JTable invoiceTable;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField mobileTextField;
    private javax.swing.JTextField nameTextField;
    private javax.swing.JTextField nicTextField;
    private javax.swing.JTextField numberOfTermsTextField;
    private javax.swing.JButton payButton;
    private javax.swing.JTable paymentsTable;
    private org.jdesktop.swingx.JXDatePicker purchaseDatePicker;
    private javax.swing.JTextField remainingAmountTextField;
    private javax.swing.JTextField termAmountTextField;
    private javax.swing.JTextField totalAmountTextField;
    // End of variables declaration//GEN-END:variables
    DefaultTableModel invoiceTableModel, paymentsTableModel;

    @Override
    public void componentOpened() {
        // TODO add custom code on component opening
    }

    @Override
    public void componentClosed() {
        // TODO add custom code on component closing
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }

    private void clear() {

        purchaseDatePicker.setDate(new Date());
        nicTextField.setText("");
        nameTextField.setText("");
        addressTextField.setText("");
        cityTextField.setText("");
        mobileTextField.setText("");
        fixedPhoneTextField.setText("");

        invoiceNumberTextField.setText("");
        totalAmountTextField.setText("");
        initialPaymentTextField.setText("");
        numberOfTermsTextField.setText("");
        termAmountTextField.setText("");
        alreadyPaidTextField.setText("");
        remainingAmountTextField.setText("");

        invoiceTableModel.setRowCount(0);
        paymentsTableModel.setRowCount(0);
    }

}
